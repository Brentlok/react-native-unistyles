///
/// JFunc_void_std__vector_UnistyleDependency_.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include <functional>

#include <functional>
#include <vector>
#include "UnistyleDependency.hpp"
#include "JUnistyleDependency.hpp"

namespace margelo::nitro::unistyles {

  using namespace facebook;

  /**
   * C++ representation of the callback Func_void_std__vector_UnistyleDependency_.
   * This is a Kotlin `(dependencies: Array<UnistyleDependency>) -> Unit`, backed by a `std::function<...>`.
   */
  struct JFunc_void_std__vector_UnistyleDependency_ final: public jni::HybridClass<JFunc_void_std__vector_UnistyleDependency_> {
  public:
    static jni::local_ref<JFunc_void_std__vector_UnistyleDependency_::javaobject> fromCpp(const std::function<void(const std::vector<UnistyleDependency>& /* dependencies */)>& func) {
      return JFunc_void_std__vector_UnistyleDependency_::newObjectCxxArgs(func);
    }

  public:
    void call(jni::alias_ref<jni::JArrayClass<JUnistyleDependency>> dependencies) {
      return _func([&]() {
        size_t __size = dependencies->size();
        std::vector<UnistyleDependency> __vector;
        __vector.reserve(__size);
        for (size_t __i = 0; __i < __size; __i++) {
          auto __element = dependencies->getElement(__i);
          __vector.push_back(__element->toCpp());
        }
        return __vector;
      }());
    }

  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/unistyles/Func_void_std__vector_UnistyleDependency_;";
    static void registerNatives() {
      registerHybrid({makeNativeMethod("call", JFunc_void_std__vector_UnistyleDependency_::call)});
    }

  private:
    explicit JFunc_void_std__vector_UnistyleDependency_(const std::function<void(const std::vector<UnistyleDependency>& /* dependencies */)>& func): _func(func) { }

  private:
    friend HybridBase;
    std::function<void(const std::vector<UnistyleDependency>& /* dependencies */)> _func;
  };

} // namespace margelo::nitro::unistyles
